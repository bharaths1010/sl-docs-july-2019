######################
# Configuration Management
######################

Puppet  => 2005 (JVM Based)
Chef    => 2007 (Erlang)
Ansible => 2012 (was acquired by RedHat in 2015)
********************

Keywords

- Configuration Management
- Configuration Drift
- Self-Healing
- Out-of-Band Changes
- Idempotence
- Infrastructure-as-Code
- Immutable Infrastructure
- DSC => Desired State Configuration
- DSL => Domain Specific Language
- Declarative vs Imperative
- Templates / Images
  - VMware    => Templates
  - AWS       => AMI (Amazon Machine Images)
  - Docker    => Images
  - Vagrant   => Box
  - OpenStack => Images
  - DigitalOcean  => Templates/Snapshots

Standard / Golden Templates

Why Configuration Management?
  - Not to have Configuration Drift in your environment
  - Self Healing
  - Revert "Out-of-Band" changes
  - Idempotence


**********************
Chef Resources:
https://manage.chef.io/login
Chef official Tutorials: https://learn.chef.io
Infrastructure Automation Track: https://learn.chef.io/tracks/infrastructure-automation#/
**********************

Agent Based => Chef and Puppet
Agent Less  => Ansible


***************
Chef recipe:
***************

package "nginx" do
  action :install
end

user "sk12k" do
  action :create
end

service "nginx" do
  action :start
end

***************
Puppet Manifest
***************
node default {
package { 'tree':
  ensure    => 'installed',
}
user { 'sk12k':
  ensure    => 'present',
  password  => 'mysuperpassword',
}
file { '/tmp/puppet.txt':
  ensure => 'present',
  content=> "This file was create via Puppet"
}
}

***************
site.pp and init.pp
***************


## "=>" is called Hash-Rocket
***************
Ansible Playbook
***************

- name: install nginx
  apt:
    name: nginx
    state: present

*****************
Configuration Drift
*****************

Standard configuration:

.net 4.5
user x who has read permission on folder y
port 7676 closed


.Net => 5.0
user x has now r/w permission on folder y
port 7676 => open

*****************
Puppet Converge steps
*****************

=> puppet agent -t
=> agent sends facts to master (in the form of "Node Object")
=> Master compiles the catalogue
=> sends the catalogue back to agent
=> Agent converges the catalogue and sends back the report to the Master


==================
References
==================

https://docs.puppet.com/
https://www.puppetcookbook.com/
https://www.edureka.co/blog/what-is-puppet/
https://www.edureka.co/blog/chef-vs-puppet-vs-ansible-vs-saltstack/
http://fullstack-puppet-docs.readthedocs.io/en/latest/puppet_manifests.html
http://www.bogotobogo.com/DevOps/Puppet/puppet_basics_of_code_terminology.php


.
